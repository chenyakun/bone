// px to rem
// 2rem

.px2rem(...) {
  @key: ~`(function () {var t = "@{arguments}";return t = t.substr(1).split(":")[0]})()`;
  @value: ~`(
    function () {
        var t = "@{arguments}", r = (/;['"]$/.test(t)) ? 2 : 1;
        var params=t.substring(1, t.length - r).split(":");
        var value = params.slice(1).join();
        value = value.replace(/(\d)px/g, function(match, p1) {
          return arguments[1]/32 + 'rem'
         });
         return value;
    })()`;
  @{key}: @value;
}


b {
  .px2rem('margin:5px, 4px, 8px')
}

.a(...) {
  @process: ~`(function () {var t = "@{arguments}";return t = t/32;})()`;
  -webkit-animation: @process;
  -moz-animation: @process;
  -o-animation: @process;
  animation: @process;
}

a {
  .a(32)
}

// ==============================================
//            The @arguments variable
// ==============================================

// 已定义参数的 mixin, 传参个数不能大于声明个数
.box-shadow(@x: 0; @y: 0; @blur: 1px; @color: #000) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  box-shadow: @arguments;
}

.box-shadow(...) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  box-shadow: @arguments;
}

.big-block {
  .box-shadow(1; 2; 3; 4; 5; 6);
}


.border-radius(@radius: 5px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}

.border {
  .border-radius
}



// ==============================================
//                根据参数个数重载
// ==============================================
.mixin(@color) {
  color-1: @color;
}
.mixin(@color; @padding) {
  color-2: @color;
  padding-2: @padding;
}
.mixin(@color; @padding; @margin) {
  color-3: @color;
  padding-3: @padding;
  margin: @margin @margin @margin @margin;
}

.some .selector div {
  // Named Parameters
  .mixin(#008000; @padding: 1,2,3,4;);
}


